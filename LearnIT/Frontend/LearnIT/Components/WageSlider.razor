<MudStack Row="false" Justify="Justify.FlexStart">
    <MudStack Row="true" AlignItems="AlignItems.Center" Spacing="1">
        <MudTextField Label="Min Wage"
                      T="double"
                      Value="_lowerWage"
                      ValueChanged="HandleLowerWageInputChanged"
                      InputMode="InputMode.numeric"
                      Variant="Variant.Filled"
                      Margin="Margin.Normal"
                      Style="width: 6.5rem;" />
        <MudTextField Label="Max Wage"
                      T="double"
                      Value="_upperWage"
                      ValueChanged="HandleUpperWageInputChanged"
                      InputMode="InputMode.numeric"
                      Variant="Variant.Filled"
                      Margin="Margin.Normal"
                      Style="width: 6.5rem;" />
    </MudStack>
    <IgniteUI.Blazor.Controls.IgbRangeSlider 
        Step="1"                                      
        Min="MinWage"                                    
        Max="MaxWage"
        Upper="_upperWage"
        Lower="_lowerWage"                                  
        Change="OnSliderChangedAsync"
        style="width:12.5rem;"> 
    </IgniteUI.Blazor.Controls.IgbRangeSlider>
</MudStack>

@code {
    [Parameter] public double MinWage { get; set; }
    [Parameter] public double MaxWage { get; set; }


    [Parameter] public EventCallback<double> LowerWageChanged { get; set; }
    [Parameter] public EventCallback<double> UpperWageChanged { get; set; }

    private double _lowerWage;
    private double _upperWage;
    private bool _invokeParametersOnLowerWageTextChanged = true;
    private bool _invokeParametersOnUpperWageTextChanged = true;

    protected override void OnInitialized()
    {
        _lowerWage = MinWage;
        _upperWage = MaxWage;
    }

    public void SetValuesToDefult()
    {
        _invokeParametersOnLowerWageTextChanged = false;
        _invokeParametersOnUpperWageTextChanged = false;

        _lowerWage = MinWage;
        _upperWage = MaxWage;
    }

    private async Task HandleLowerWageInputChanged(double fromWage)
    {
        if (!_invokeParametersOnLowerWageTextChanged)
        {
            _invokeParametersOnLowerWageTextChanged = true; 
            return;
        }

        if (fromWage < MinWage || fromWage > _upperWage)
            return;

        _lowerWage = fromWage;
        await LowerWageChanged.InvokeAsync(_lowerWage);
    }

    private async Task HandleUpperWageInputChanged(double toWage)
    {
        if (!_invokeParametersOnUpperWageTextChanged)
        {
            _invokeParametersOnUpperWageTextChanged = true;
            return;
        }

        if (toWage > MaxWage || toWage < _lowerWage)
            return;

        _upperWage = toWage;
        await UpperWageChanged.InvokeAsync(_upperWage);
    }


    private async Task OnSliderChangedAsync(IgniteUI.Blazor.Controls.IgbRangeSliderValueEventArgs args)
    {
        _invokeParametersOnLowerWageTextChanged = false;
        _invokeParametersOnUpperWageTextChanged = false;
        if (_lowerWage != args.Detail.Lower)
        {
            _lowerWage = args.Detail.Lower;
            await LowerWageChanged.InvokeAsync(_lowerWage);
        }
        if (_upperWage != args.Detail.Upper)
        {
            _upperWage = args.Detail.Upper;
            await UpperWageChanged.InvokeAsync(_upperWage);
        }
    }
}
